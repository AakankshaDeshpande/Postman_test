{
	"info": {
		"_postman_id": "597c641f-03d7-405b-a3ff-5d626f0fbae9",
		"name": "Team9_TechSquad_Dietician_Hackathon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32870268",
		"_collection_link": "https://interstellar-star-412911.postman.co/workspace/Team9_TechSquad~c8dd5450-0c41-45e4-b990-1258a95038d8/collection/37331261-597c641f-03d7-405b-a3ff-5d626f0fbae9?action=share&source=collection_link&creator=32870268"
	},
	"item": [
		{
			"name": "NonAuthorization-AllModules",
			"item": [
				{
					"name": "User Module",
					"item": [
						{
							"name": "GET_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Admintoken_env\",jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"    pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"9922990760\",\r\n  \"DateOfBirth\": \"2024-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters\",\r\n  \"Email\": \"DietitianTwo@gmail.com\",\r\n  \"Firstname\": \"DietitianTwo\",\r\n  \"HospitalCity\": \"Mumbai\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"DietitianTwo\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/dietician",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dietician Module",
					"item": [
						{
							"name": "CreateDietician_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Dieticiantoken_env\",jsonData.token);\r",
											"\r",
											"console.log(\"Response:\", pm.response.text());///\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Log the environment variables\r",
											"console.log(\"Password:\", pm.environment.get(\"dieticianPwd_env\"));\r",
											"console.log(\"Email:\", pm.environment.get(\"dieticianemail_env\"));\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"password\":\"{{dieticianPwd_env}}\",\r\n\"userLoginEmail\":\"{{dieticianemail_env}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 201) { \r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dietician_id\",jsonData.id);\r",
											"  pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"   \r",
											"   }\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{ContactNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{Email}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"Verified fields(Lastname and Firstname) present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
											"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
											"  \r",
											"}\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{updateContactNumber}}\",\r\n  \"DateOfBirth\": \"{{updateDateOfBirth}}\",\r\n  \"Education\": \"{{updateEducation}}\",\r\n  \"Email\": \"{{updateEmail}}\",\r\n  \"Firstname\": \"{{updateFirstname}}\",\r\n  \"HospitalCity\": \"{{updateHospitalCity}}\",\r\n  \"HospitalName\": \"{{updateHospitalName}}\",\r\n  \"HospitalPincode\": \"{{updateHospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{updateHospitalStreet}}\",\r\n  \"Lastname\": \"{{updateLastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ditecian By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											"\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset(\"dieticianID_env\");\r",
											"pm.environment.unset(\"Firstname_env\");\r",
											"pm.environment.unset(\"Lastname_env\");\r",
											"\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Ditecian",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PatientModule",
					"item": [
						{
							"name": "CreatePatient",
							"request": {
								"method": "POST",
								"header": []
							},
							"response": []
						},
						{
							"name": "Get Patients Morbidity Details",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Retrieve Patient file by FileId",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "GetAllPatients",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Update Patient",
							"request": {
								"method": "PUT",
								"header": []
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"request": {
								"method": "DELETE",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "Morbidity",
					"item": [
						{
							"name": "NonAuth_AllMorbidity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/morbidity",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "NonAuth_MorbodityTestName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/morbidity/Hb1ac",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity",
										"Hb1ac"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "EndToEndTesting-AllModules",
			"item": [
				{
					"name": "User Module(E2E)",
					"item": [
						{
							"name": "GET_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Admintoken_env\",jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Dieticiantoken_env\",jsonData.token);\r",
											"\r",
											"console.log(\"Response:\", pm.response.text());///\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Log the environment variables\r",
											"console.log(\"Password:\", pm.environment.get(\"dieticianPwd_env\"));\r",
											"console.log(\"Email:\", pm.environment.get(\"dieticianemail_env\"));\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"password\":\"{{dieticianPwd_env}}\",\r\n\"userLoginEmail\":\"{{dieticianemail_env}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"    pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"9922990160\",\r\n  \"DateOfBirth\": \"2023-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters\",\r\n  \"Email\": \"DietitianTwAo@gmail.com\",\r\n  \"Firstname\": \"DietitianTwo\",\r\n  \"HospitalCity\": \"Mumbai\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"DietitianTwo\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/dietician",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dietician Module(E2E)",
					"item": [
						{
							"name": "CreateDieticianCSV",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Define the phone number format\r",
											"const phoneNumberFormat = '090#######';\r",
											"\r",
											"// Function to generate random digits, also defining how many digits to generate\r",
											"function getRandomDigit() {\r",
											"  return Math.floor(Math.random() * 10);\r",
											"}\r",
											"\r",
											"// Function to generate a phone number\r",
											"function generatePhoneNumber(format) {\r",
											"  let phoneNumber = '';\r",
											"  for (let i = 0; i < format.length; i++) {\r",
											"    const char = format[i];\r",
											"    if (char === '#') {\r",
											"      phoneNumber += getRandomDigit();\r",
											"    } else {\r",
											"      phoneNumber += char;\r",
											"    }\r",
											"  }\r",
											"  return phoneNumber;\r",
											"}\r",
											"\r",
											"// Set the random phone number as an environment variable\r",
											"pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
											"\r",
											"var random = Math.random().toString(36).substring(2);\r",
											"var useremail = \"siri\"+random+\"@gmail.com\";\r",
											"\r",
											"pm.environment.set(\"email_env\", useremail);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{randomPhoneNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{email_env}}\",\r\n  \"Firstname\": \"{{$randomFirstName}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{$randomLastName}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Define the phone number format\r",
											"const phoneNumberFormat = '090#######';\r",
											"\r",
											"// Function to generate random digits, also defining how many digits to generate\r",
											"function getRandomDigit() {\r",
											"  return Math.floor(Math.random() * 10);\r",
											"}\r",
											"\r",
											"// Function to generate a phone number\r",
											"function generatePhoneNumber(format) {\r",
											"  let phoneNumber = '';\r",
											"  for (let i = 0; i < format.length; i++) {\r",
											"    const char = format[i];\r",
											"    if (char === '#') {\r",
											"      phoneNumber += getRandomDigit();\r",
											"    } else {\r",
											"      phoneNumber += char;\r",
											"    }\r",
											"  }\r",
											"  return phoneNumber;\r",
											"}\r",
											"\r",
											"// Set the random phone number as an environment variable\r",
											"pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
											"\r",
											"var random = Math.random().toString(36).substring(2);\r",
											"var useremail = \"siri\"+random+\"@gmail.com\";\r",
											"\r",
											"pm.environment.set(\"email_env\", useremail);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{randomPhoneNumber}}\",\r\n  \"DateOfBirth\": \"2024-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters\",\r\n  \"Email\": \"{{email_env}}\",\r\n  \"Firstname\": \"{{$randomFirstName}}\",\r\n  \"HospitalCity\": \"Mumbai\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"{{$randomLastName}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(200);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Define the phone number format\r",
											"const phoneNumberFormat = '090#######';\r",
											"\r",
											"// Function to generate random digits, also defining how many digits to generate\r",
											"function getRandomDigit() {\r",
											"  return Math.floor(Math.random() * 10);\r",
											"}\r",
											"\r",
											"// Function to generate a phone number\r",
											"function generatePhoneNumber(format) {\r",
											"  let phoneNumber = '';\r",
											"  for (let i = 0; i < format.length; i++) {\r",
											"    const char = format[i];\r",
											"    if (char === '#') {\r",
											"      phoneNumber += getRandomDigit();\r",
											"    } else {\r",
											"      phoneNumber += char;\r",
											"    }\r",
											"  }\r",
											"  return phoneNumber;\r",
											"}\r",
											"\r",
											"// Set the random phone number as an environment variable\r",
											"pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
											"\r",
											"var random = Math.random().toString(36).substring(2);\r",
											"var useremail = \"siri\"+random+\"@gmail.com\";\r",
											"\r",
											"pm.environment.set(\"email_env\", useremail);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{randomPhoneNumber}}\",\r\n  \"DateOfBirth\": \"2024-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters sssss\",\r\n  \"Email\": \"{{email_env}}\",\r\n  \"Firstname\": \"DietitianTwo\",\r\n  \"HospitalCity\": \"Mumbaicity\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"DietitianTwo\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dieticianID_env}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Ditecian By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"\r",
											"pm.test(\"Status code 200\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(200);\r",
											"}\r",
											");\r",
											"//validating json fields in the response\r",
											"pm.test(\"Check values of json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.id).to.eql(pm.environment.get(\"dieticianID_env\"));\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"7037037037\",\r\n  \"DateOfBirth\": \"1977-07-26T18:14:08.570Z\",\r\n  \"Education\": \"MSTERS\",\r\n  \"Email\": \"teamnine.ditecian@gmail.com\",\r\n  \"Firstname\": \"teamnine\",\r\n  \"HospitalCity\": \"Reston\",\r\n  \"HospitalName\": \"Pediatrics\",\r\n  \"HospitalPincode\": \"201711\",\r\n  \"HospitalStreet\": \"Reston Dr\",\r\n  \"Lastname\": \"Dietician\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dieticianID_env}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset(\"dieticianID_env\");\r",
											"\r",
											"//commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dieticianID_env}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Ditecian",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"\r",
											"pm.test(\"Status code 200\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(200);\r",
											"}\r",
											");\r",
											"//validating json fields in the response\r",
											"pm.test(\"Check values of json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.id).to.eql(pm.environment.get(\"dieticianID_env\"));\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PatientModule(E2E)",
					"item": [
						{
							"name": "CreatePatientMorbidity",
							"request": {
								"method": "POST",
								"header": []
							},
							"response": []
						},
						{
							"name": "CreatePatientValidInvalid",
							"request": {
								"method": "POST",
								"header": []
							},
							"response": []
						},
						{
							"name": "UpdatePatienValidInvalidt",
							"request": {
								"method": "PUT",
								"header": []
							},
							"response": []
						},
						{
							"name": "UpdatePatienwith/withoutVitals",
							"request": {
								"method": "PUT",
								"header": []
							},
							"response": []
						},
						{
							"name": "GetAllPatients",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "GetPatientMorbidityDetails",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "RetrievePatientfilebyFileId",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Deletebypatientmorbidityid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code == 200) {\r",
											"pm.test(\"Verify the expected status code is 200\", function () {\r",
											"pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"status line have OK\", function () {\r",
											"pm.expect(pm.response.status).to.include(\"OK\");\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/patient/{{PatientIDMorbidity_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"patient",
										"{{PatientIDMorbidity_env}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "InvalidEndPoints-AllModules",
			"item": [
				{
					"name": "User Module",
					"item": [
						{
							"name": "GET_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Admintoken_env\",jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"    pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"9922990760\",\r\n  \"DateOfBirth\": \"2024-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters\",\r\n  \"Email\": \"DietitianTwo@gmail.com\",\r\n  \"Firstname\": \"DietitianTwo\",\r\n  \"HospitalCity\": \"Mumbai\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"DietitianTwo\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/dietician",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dietician Module",
					"item": [
						{
							"name": "CreateDietician_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Dieticiantoken_env\",jsonData.token);\r",
											"\r",
											"console.log(\"Response:\", pm.response.text());///\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Log the environment variables\r",
											"console.log(\"Password:\", pm.environment.get(\"dieticianPwd_env\"));\r",
											"console.log(\"Email:\", pm.environment.get(\"dieticianemail_env\"));\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"password\":\"{{dieticianPwd_env}}\",\r\n\"userLoginEmail\":\"{{dieticianemail_env}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 201) { \r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   \r",
											"  pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"    pm.environment.set(\"dietician_id\",jsonData.id);\r",
											"   }\r",
											"\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{ContactNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{Email}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dieticians",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dieticians"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"Verified fields(Lastname and Firstname) present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
											"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
											"  \r",
											"}\r",
											");\r",
											"}\r",
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"Verified fields(Lastname and Firstname) present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
											"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
											"  \r",
											"}\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{updateContactNumber}}\",\r\n  \"DateOfBirth\": \"{{updateDateOfBirth}}\",\r\n  \"Education\": \"{{updateEducation}}\",\r\n  \"Email\": \"{{updateEmail}}\",\r\n  \"Firstname\": \"{{updateFirstname}}\",\r\n  \"HospitalCity\": \"{{updateHospitalCity}}\",\r\n  \"HospitalName\": \"{{updateHospitalName}}\",\r\n  \"HospitalPincode\": \"{{updateHospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{updateHospitalStreet}}\",\r\n  \"Lastname\": \"{{updateLastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_ids}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_ids}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ditecian By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											"\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_ids}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_ids}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset(\"dieticianID_env\");\r",
											"pm.environment.unset(\"Firstname_env\");\r",
											"pm.environment.unset(\"Lastname_env\");\r",
											"\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_ids}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_ids}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Ditecian",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dieticians",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dieticians"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PatientModule",
					"item": [
						{
							"name": "GetAllpatients_with_invalid_endpoint",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Get Patients Morbidity Details with invalid endpoint",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Retrieve Patient file by FileId with invalid endpoint",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Delete  by patient id Invalid endpoint",
							"request": {
								"method": "DELETE",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "Morbidity Module",
					"item": [
						{
							"name": "PUT Morbidities By Test Name Invalid Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidity/HbA1c",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity",
										"HbA1c"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Morbidities InvalidEP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidityy",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidityy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Morbidities Invalid Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidity",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Morbidities By Test Name InvalidEP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidity/HbA1cddd",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity",
										"HbA1cddd"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Authorization-AllModules",
			"item": [
				{
					"name": "User Module",
					"item": [
						{
							"name": "GET_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Admintoken_env\",jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 201\",() =>\r",
											"{\r",
											"    pm.response.to.have.status(201);\r",
											"}\r",
											");\r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"    pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"}\r",
											");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"9922990760\",\r\n  \"DateOfBirth\": \"2024-07-26T18:14:08.570Z\",\r\n  \"Education\": \"Masters\",\r\n  \"Email\": \"DietitianTwo@gmail.com\",\r\n  \"Firstname\": \"DietitianTwo\",\r\n  \"HospitalCity\": \"Mumbai\",\r\n  \"HospitalName\": \"Mumbai\",\r\n  \"HospitalPincode\": \"111111\",\r\n  \"HospitalStreet\": \"Mumbai\",\r\n  \"Lastname\": \"DietitianTwo\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/dietician",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dietician Module",
					"item": [
						{
							"name": "GET_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Admintoken_env\",jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 201) { \r",
											"    pm.test(\"Schema is valid\",()=>{\r",
											"    pm.expect(tv4.validate(jsonData,schema_validation)).to.be.true;\r",
											"}); \r",
											"\r",
											"pm.test(\"Check deticianid present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"dietician_id\",jsonData.id);\r",
											"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
											"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
											"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
											"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
											"}\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admintoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{ContactNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{Email}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateDietician_BearerToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.response.text());\r",
											"pm.environment.set(\"Dieticiantoken_env\",jsonData.token);\r",
											"\r",
											"console.log(\"Response:\", pm.response.text());///\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Log the environment variables\r",
											"console.log(\"Password:\", pm.environment.get(\"dieticianPwd_env\"));\r",
											"console.log(\"Email:\", pm.environment.get(\"dieticianemail_env\"));\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"password\":\"{{dieticianPwd_env}}\",\r\n\"userLoginEmail\":\"{{dieticianemail_env}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"Verified fields(Lastname and Firstname) present in the response body\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
											"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
											"  \r",
											"}\r",
											");\r",
											"}\r",
											"var schema_validation = {\r",
											"    \r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"description\": \"\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ContactNumber\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"DateOfBirth\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Education\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Email\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Firstname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalCity\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalName\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalPincode\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"HospitalStreet\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"Lastname\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"number\"\r",
											"    },\r",
											"    \"loginPassword\": {\r",
											"      \"type\": \"string\",\r",
											"      \"minLength\": 1\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"ContactNumber\",\r",
											"    \"DateOfBirth\",\r",
											"    \"Education\",\r",
											"    \"Email\",\r",
											"    \"Firstname\",\r",
											"    \"HospitalCity\",\r",
											"    \"HospitalName\",\r",
											"    \"HospitalPincode\",\r",
											"    \"HospitalStreet\",\r",
											"    \"Lastname\",\r",
											"    \"id\",\r",
											"    \"loginPassword\"\r",
											"  ]\r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{updateContactNumber}}\",\r\n  \"DateOfBirth\": \"{{updateDateOfBirth}}\",\r\n  \"Education\": \"{{updateEducation}}\",\r\n  \"Email\": \"{{updateEmail}}\",\r\n  \"Firstname\": \"{{updateFirstname}}\",\r\n  \"HospitalCity\": \"{{updateHospitalCity}}\",\r\n  \"HospitalName\": \"{{updateHospitalName}}\",\r\n  \"HospitalPincode\": \"{{updateHospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{updateHospitalStreet}}\",\r\n  \"Lastname\": \"{{updateLastname}}\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											"\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset(\"dietician_id\");\r",
											"pm.environment.unset(\"Firstname_env\");\r",
											"pm.environment.unset(\"Lastname_env\");\r",
											"commontests.checkstatuscode();\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dietician/{{dietician_id}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician",
										"{{dietician_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"\r",
											"if (pm.response.code === 200) { \r",
											"pm.test(\"validating json fields\",() =>\r",
											"{\r",
											"   var jsonData = JSON.parse(pm.response.text());\r",
											"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
											"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
											"}\r",
											");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/dietician",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Admintoken_env}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PatientModule",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "GetAllPatients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"if (pm.response.code == 200) {\r",
											"\r",
											"    pm.test(\"PatientId is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(patientItem => {\r",
											"    pm.expect(patientItem.patientId).to.be.a('number').and.to.be.at.least(0);\r",
											"    });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/patient",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetPatientMorbidityDetails",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();\r",
											"commontests.checkstatuscode();\r",
											"console.log(pm.response.json());\r",
											"var jsonData = JSON.parse(pm.response.text());\r",
											"   \r",
											"pm.test(\"Test data type of the response\", ()=> {\r",
											"     pm.expect(jsonData).to.be.an(\"array\");\r",
											"     pm.expect(jsonData[0].fileId).to.be.an(\"string\");\r",
											"     pm.expect(jsonData[0].fileName).to.be.an(\"string\");\r",
											"     pm.expect(jsonData[0].uploadDate).to.be.an(\"string\");\r",
											"     pm.expect(jsonData[0].morbidConditions).to.be.an(\"object\");\r",
											"     pm.expect(jsonData[0].vitals).to.be.an(\"object\");     \r",
											"     pm.expect(jsonData[0].vitals.Weight).to.be.an(\"number\");\r",
											"     pm.expect(jsonData[0].vitals.Temperature).to.be.an(\"number\");\r",
											"     pm.expect(jsonData[0].vitals.SP).to.be.an(\"number\");\r",
											"     pm.expect(jsonData[0].vitals.DP).to.be.an(\"number\");\r",
											"     pm.expect(jsonData[0].vitals.Height).to.be.an(\"number\");\r",
											"     pm.expect(jsonData[0].morbidConditionStr).to.be.an(\"string\");     \r",
											"});\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"    var schema = {\r",
											"    \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"fileId\": {\"type\": \"string\"},\r",
											"        \"fileName\": {\"type\": \"string\"},\r",
											"        \"uploadDate\": {\"type\": \"string\"},\r",
											"        \"morbidConditions\": {\"type\": \"object\"},\r",
											"        \"vitals\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"Weight\": {\"type\": \"number\"},\r",
											"            \"Height\": {\"type\": \"number\"},\r",
											"            \"Temperature\": {\"type\": \"number\"},\r",
											"            \"SP\": {\"type\": \"integer\"},\r",
											"            \"DP\": {\"type\": \"integer\"}\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"Weight\",\"Height\",\"Temperature\",\r",
											"            \"SP\",\"DP\"\r",
											"          ]\r",
											"        },\r",
											"        \"morbidConditionStr\": {\"type\": \"string\"}\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"fileId\",\"fileName\",\"uploadDate\",\"morbidConditions\",\"vitals\",\r",
											"        \"morbidConditionStr\"]\r",
											"    };\r",
											"   \r",
											"    pm.test(\"Validate status_items\"), () => {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/patient/testReports/{{PatientIDMorbidity_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{PatientIDMorbidity_env}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "RetrievePatientfilebyFileId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify the expected status code is 200\", function () {\r",
											"pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"status line have OK\", function () {\r",
											"pm.expect(pm.response.status).to.include(\"OK\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/patient/testReports/viewFile/{{FileidMorbidity_env}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{FileidMorbidity_env}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletebypatientmorbidityid",
							"request": {
								"method": "DELETE",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "Morbidity Module",
					"item": [
						{
							"name": "Get all Morbidities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidity",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Morbidities By Test Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"commontests.postPutHeaderTest();\r",
											"commontests.postPutCommonTests();"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dieticiantoken_env}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/morbidity/HbA1c",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"morbidity",
										"HbA1c"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "EndToEnd-CompleteFlow",
			"item": [
				{
					"name": "GET_AdminBearerToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(pm.response.text());\r",
									"pm.environment.set(\"Admintoken_env\",jsonData.token);\r",
									"\r",
									"commontests.checkstatuscode();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team9@gmail.com\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/login",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"commontests.postPutCommonTests();\r",
									"commontests.checkstatuscode();\r",
									"\r",
									"var schema_validation = {\r",
									"    \r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"description\": \"\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"ContactNumber\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"DateOfBirth\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Education\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Email\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Firstname\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalCity\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalName\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalPincode\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalStreet\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Lastname\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"loginPassword\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"ContactNumber\",\r",
									"    \"DateOfBirth\",\r",
									"    \"Education\",\r",
									"    \"Email\",\r",
									"    \"Firstname\",\r",
									"    \"HospitalCity\",\r",
									"    \"HospitalName\",\r",
									"    \"HospitalPincode\",\r",
									"    \"HospitalStreet\",\r",
									"    \"Lastname\",\r",
									"    \"id\",\r",
									"    \"loginPassword\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"var jsonData = pm.response.json(); \r",
									"if(pm.response.code === 200||pm.response.code === 201) \r",
									"    pm.test(\"Schema is valid\",()=>{\r",
									"    pm.expect(tv4.validate(jsonData,schema_validation)).to.be.true;\r",
									"}); \r",
									"\r",
									"if(pm.response.code === 200||pm.response.code === 201){\r",
									"pm.test(\"Schema is valid\",()=>{\r",
									"    pm.expect(tv4.validate(jsonData,schema_validation)).to.be.true;\r",
									"}); \r",
									"//Validate the Data Type\r",
									"pm.test(\"Validate Data Type of the response\",()=>{\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"       \r",
									"     if(jsonData.properties!==null){\r",
									"    pm.expect(jsonData.Lastname).to.be.a(\"string\");}\r",
									"    pm.expect(jsonData.Firstname).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.HospitalName).to.be.a(\"string\");\r",
									"    });\r",
									"    \r",
									"}else\r",
									"{\r",
									"    pm.test(\"Schema is Invalid\",()=>{\r",
									"    pm.expect(tv4.validate(jsonData,schema)).to.be.false;\r",
									"});\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Check deticianid present in the response body\",() =>\r",
									"{\r",
									"   var jsonData = JSON.parse(pm.response.text());\r",
									"   pm.environment.set(\"dieticianID_env\",jsonData.id);\r",
									"   pm.environment.set(\"dieticianPwd_env\",jsonData.loginPassword);\r",
									"   pm.environment.set(\"dieticianemail_env\",jsonData.Email);\r",
									"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
									"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
									"}\r",
									");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//commontestsScripts.randomPhoneNumberAndEmail();\r",
									"const phoneNumberFormat = '703#######';\r",
									"\r",
									"// Function to generate random digits, also defining how many digits to generate\r",
									"function getRandomDigit() {\r",
									"  return Math.floor(Math.random() * 10);\r",
									"}\r",
									"\r",
									"// Function to generate a phone number\r",
									"function generatePhoneNumber(format) {\r",
									"  let phoneNumber = '';\r",
									"  for (let i = 0; i < format.length; i++) {\r",
									"    const char = format[i];\r",
									"    if (char === '#') {\r",
									"      phoneNumber += getRandomDigit();\r",
									"    } else {\r",
									"      phoneNumber += char;\r",
									"    }\r",
									"  }\r",
									"  return phoneNumber;\r",
									"}\r",
									"\r",
									"// Set the random phone number as an environment variable\r",
									"pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
									"\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var useremail = \"team9\"+random+\"@gmail.com\";\r",
									"\r",
									"pm.environment.set(\"email_env\", useremail);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{randomPhoneNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{email_env}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/dietician",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateDietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"commontests.postPutCommonTests();\r",
									"commontests.checkstatuscode();\r",
									"\r",
									"var schema_validation = {\r",
									"    \r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"description\": \"\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"ContactNumber\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"DateOfBirth\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Education\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Email\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Firstname\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalCity\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalName\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalPincode\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"HospitalStreet\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    },\r",
									"    \"Lastname\": {\r",
									"      \"type\": \"string\",\r",
									"      \"minLength\": 1\r",
									"    }\r",
									"   \r",
									"  },\r",
									"  \"required\": [\r",
									"    \"ContactNumber\",\r",
									"    \"DateOfBirth\",\r",
									"    \"Education\",\r",
									"    \"Email\",\r",
									"    \"Firstname\",\r",
									"    \"HospitalCity\",\r",
									"    \"HospitalName\",\r",
									"    \"HospitalPincode\",\r",
									"    \"HospitalStreet\",\r",
									"    \"Lastname\"\r",
									"    \r",
									"  ]\r",
									"};\r",
									"\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"if(pm.response.code === 200||pm.response.code === 201){\r",
									"pm.test(\"Schema is valid\",()=>{\r",
									"    pm.expect(tv4.validate(jsonData,schema_validation)).to.be.true;\r",
									"}); \r",
									"//Validate the Data Type\r",
									"pm.test(\"Validate Data Type of the response\",()=>{\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"       \r",
									"     if(jsonData.properties!==null){\r",
									"    pm.expect(jsonData.Lastname).to.be.a(\"string\");}\r",
									"    pm.expect(jsonData.Firstname).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.HospitalPincode).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.HospitalName).to.be.a(\"string\");\r",
									"    });\r",
									"    \r",
									"}else\r",
									"{\r",
									"    pm.test(\"Schema is Invalid\",()=>{\r",
									"    pm.expect(tv4.validate(jsonData,schema)).to.be.false;\r",
									"});\r",
									"}\r",
									"\r",
									"pm.test(\"Verified fields(Lastname and Firstname) present in the response body\",() =>\r",
									"{\r",
									"   var jsonData = JSON.parse(pm.response.text());\r",
									"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
									"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
									"  \r",
									"}\r",
									");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// // Define the phone number format\r",
									"// const phoneNumberFormat = '703#######';\r",
									"\r",
									"// // Function to generate random digits, also defining how many digits to generate\r",
									"// function getRandomDigit() {\r",
									"//   return Math.floor(Math.random() * 10);\r",
									"// }\r",
									"\r",
									"// // Function to generate a phone number\r",
									"// function generatePhoneNumber(format) {\r",
									"//   let phoneNumber = '';\r",
									"//   for (let i = 0; i < format.length; i++) {\r",
									"//     const char = format[i];\r",
									"//     if (char === '#') {\r",
									"//       phoneNumber += getRandomDigit();\r",
									"//     } else {\r",
									"//       phoneNumber += char;\r",
									"//     }\r",
									"//   }\r",
									"//   return phoneNumber;\r",
									"// }\r",
									"\r",
									"// // Set the random phone number as an environment variable\r",
									"// pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
									"\r",
									"// var random = Math.random().toString(36).substring(2);\r",
									"// var useremail = \"TeamNine\"+random+\"@gmail.com\";\r",
									"\r",
									"// pm.environment.set(\"email_env\", useremail);\r",
									"\r",
									"commontestsScripts.randomPhoneNumberAndEmail();\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{randomPhoneNumber}}\",\r\n  \"DateOfBirth\": \"{{updateDateOfBirth}}\",\r\n  \"Education\": \"{{updateEducation}}\",\r\n  \"Email\": \"{{email_env}}\",\r\n  \"Firstname\": \"{{updateFirstname}}\",\r\n  \"HospitalCity\": \"{{updateHospitalCity}}\",\r\n  \"HospitalName\": \"{{updateHospitalName}}\",\r\n  \"HospitalPincode\": \"{{updateHospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{updateHospitalStreet}}\",\r\n  \"Lastname\": \"{{updateLastname}}\"\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"dietician",
								"{{dieticianID_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ditecian By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"commontests.postPutCommonTests();\r",
									"commontests.checkstatuscode();\r",
									"\r",
									"if (pm.response.code === 200) { \r",
									"pm.test(\"validating json fields\",() =>\r",
									"{\r",
									"   var jsonData = JSON.parse(pm.response.text());\r",
									"   pm.expect(jsonData.Firstname).to.eql(pm.environment.get(\"Firstname_env\"));\r",
									"   pm.expect(jsonData.Lastname).to.eql(pm.environment.get(\"Lastname_env\"));\r",
									"}\r",
									");\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"dietician",
								"{{dieticianID_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Ditecian",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"commontests.postPutCommonTests();\r",
									"\r",
									"pm.test(\"Status code 200\",() =>\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"}\r",
									");\r",
									"\r",
									"pm.test(\"Values of JSON fields\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    //pm.expect(jsonData.Id).to.eql(pm.environment.id);\r",
									"    // Assuming the response is an array\r",
									"    if (Array.isArray(jsonData.data)) {\r",
									"    let numberOfRecords = jsonData.data.length;\r",
									"    console.log(\"Number of records:\", numberOfRecords);\r",
									"    }\r",
									"else {\r",
									"    console.error(\"Response data is not an array or 'data' property is missing.\");\r",
									"}\r",
									"\r",
									"    });\r",
									"    \r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/dietician",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDietician_BearerToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(pm.response.text());\r",
									"pm.environment.set(\"Dieticiantoken_env\",jsonData.token);\r",
									"\r",
									"console.log(\"Response:\", pm.response.text());///\r",
									"\r",
									"commontests.checkstatuscode();\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Log the environment variables\r",
									"console.log(\"Password:\", pm.environment.get(\"dieticianPwd_env\"));\r",
									"console.log(\"Email:\", pm.environment.get(\"dieticianemail_env\"));\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"password\":\"{{dieticianPwd_env}}\",\r\n\"userLoginEmail\":\"{{dieticianemail_env}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/login",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.checkstatuscode();\r",
									"\r",
									"var jsonData = JSON.parse(pm.response.text());\r",
									"if (pm.response.code === 201) {\r",
									"pm.test(\"Check patientID present in the response body\",() =>\r",
									"{\r",
									"      pm.environment.set(\"PatientID_env\",jsonData.patientId);\r",
									" \r",
									"}\r",
									");\r",
									"}\r",
									"\r",
									"var fileid = Object.keys(jsonData.FileMorbidity)[0];\r",
									"\r",
									"\r",
									"pm.environment.set(\"Fileid_env\", fileid);\r",
									"\r",
									"//console.log(pm.response.text());\r",
									"\r",
									"\r",
									"//console.log(\"Extracted morbidity key:\", fileid);\r",
									"//console.log(\"JSONDATA:\", jsonData.text());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const phoneNumberFormat = '090#######';\r",
									"\r",
									"// Function to generate random digits, also defining how many digits to generate\r",
									"function getRandomDigit() {\r",
									"  return Math.floor(Math.random() * 10);\r",
									"}\r",
									"\r",
									"// Function to generate a phone number\r",
									"function generatePhoneNumber(format) {\r",
									"  let phoneNumber = '';\r",
									"  for (let i = 0; i < format.length; i++) {\r",
									"    const char = format[i];\r",
									"    if (char === '#') {\r",
									"      phoneNumber += getRandomDigit();\r",
									"    } else {\r",
									"      phoneNumber += char;\r",
									"    }\r",
									"  }\r",
									"  return phoneNumber;\r",
									"}\r",
									"\r",
									"// Set the random phone number as an environment variable\r",
									"pm.environment.set('Patient_randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
									"\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var useremail = \"siri\"+random+\"@gmail.com\";\r",
									"\r",
									"pm.environment.set(\"Patient_email_env\", useremail);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"value": "   {\n   \"FirstName\":\"{{P_FirstName}}\",\n   \"LastName\":\"{{P_LastName}}\",\n   \"ContactNumber\":\"{{Patient_randomPhoneNumber}}\",\n   \"Email\":\"{{Patient_email_env}}\",\n   \"Allergy\":\"{{P_Allergy}}\",\n   \"FoodPreference\":\"{{P_FoodPreference}}\",\n   \"CuisineCategory\":\"{{P_CuisineCategory}}\",\n   \"DateOfBirth\":\"{{P_DateOfBirth}}\"\n    }",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/kollu/Downloads/PatientData.pdf"
								},
								{
									"key": "FirstName",
									"value": "{{P_FirstName}}",
									"type": "text"
								},
								{
									"key": "LastName",
									"value": "{{P_LastName}}",
									"type": "text"
								},
								{
									"key": "ContactNumber",
									"value": "{{P_ContactNumber}}",
									"type": "text"
								},
								{
									"key": "Email",
									"value": "{{P_Email}}",
									"type": "text"
								},
								{
									"key": "Allergy",
									"value": "{{P_Allergy}}",
									"type": "text"
								},
								{
									"key": "FoodPreference",
									"value": "{{P_FoodPreference}}",
									"type": "text"
								},
								{
									"key": "CuisineCategory",
									"value": "{{P_CuisineCategory}}",
									"type": "text"
								},
								{
									"key": "DateOfBirth",
									"value": "{{P_DateOfBirth}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
							"protocol": "https",
							"host": [
								"dietician-july-api-hackathon-80f2590665cc",
								"herokuapp",
								"com"
							],
							"path": [
								"dietician",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePatient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"commontests.postPutCommonTests();\r",
									"commontests.checkstatuscode();\r",
									"\r",
									"var jsonData = pm.response.json(); \r",
									"if (pm.response.code === 200) { \r",
									"pm.test(\"Verified updated fields(Lastname and Firstname) present in the response body\",() =>\r",
									"{\r",
									"   var jsonData = JSON.parse(pm.response.text());\r",
									"   pm.environment.set(\"Firstname_env\",jsonData.Firstname);\r",
									"   pm.environment.set(\"Lastname_env\",jsonData.Lastname);\r",
									"  \r",
									"}\r",
									");\r",
									"}\r",
									"pm.test(\"Verified patient Id is same\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.patientId).to.eql(pm.environment.get(\"PatientID_env\"));\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": " patientInfo",
									"value": "   {\n   \"FirstName\":\"{{P_updateFirstName}}\",\n   \"LastName\":\"{{P_updateLastName}}\",\n   \"ContactNumber\":\"{{Patient_randomPhoneNumber}}\",\n   \"Email\":\"{{Patient_email_env}}\",\n   \"Allergy\":\"{{P_Allergy}}\",\n   \"FoodPreference\":\"{{P_FoodPreference}}\",\n   \"CuisineCategory\":\"{{P_CuisineCategory}}\",\n   \"DateOfBirth\":\"{{P_DateOfBirth}}\"\n    }",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1ef5292e-5528-4cb0-8156-aaa78a80f641"
								},
								{
									"key": "FirstName",
									"value": "{{P_updateFirstName}}",
									"type": "text"
								},
								{
									"key": "LastName",
									"value": "{{P_updateLastName}}",
									"type": "text"
								},
								{
									"key": "ContactNumber",
									"value": "{{Patient_randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "Email",
									"value": "{{Patient_email_env}}",
									"type": "text"
								},
								{
									"key": "Allergy",
									"value": "{{P_Allergy}}",
									"type": "text"
								},
								{
									"key": "FoodPreference",
									"value": "{{P_FoodPreference}}",
									"type": "text"
								},
								{
									"key": "CuisineCategory",
									"value": "{{P_CuisineCategory}}",
									"type": "text"
								},
								{
									"key": "DateOfBirth",
									"value": "{{P_DateOfBirth}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseUrl}}/patient/{{PatientID_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"patient",
								"{{PatientID_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TestReports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.postPutHeaderTest();\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/patient/testReports/{{PatientID_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"patient",
								"testReports",
								"{{PatientID_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AllPatients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.checkstatuscode();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{BaseUrl}}/patient",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PatientByFileID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"commontests.checkstatuscode();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/patient/testReports/viewFile/{{Fileid_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"patient",
								"testReports",
								"viewFile",
								"{{Fileid_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePatient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// commontests.postPutCommonTests();\r",
									"commontests.checkstatuscode();\r",
									"\r",
									"pm.environment.unset(\"PatientID_env\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Dieticiantoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient/{{PatientID_env}}",
							"protocol": "https",
							"host": [
								"dietician-july-api-hackathon-80f2590665cc",
								"herokuapp",
								"com"
							],
							"path": [
								"dietician",
								"patient",
								"{{PatientID_env}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Dietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"dieticianID_env\");\r",
									"pm.environment.unset(\"Firstname_env\");\r",
									"pm.environment.unset(\"Lastname_env\");\r",
									"commontests.checkstatuscode();\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken_env}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/dietician/{{dieticianID_env}}",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"dietician",
								"{{dieticianID_env}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"commontestsScripts = {\r",
					"randomPhoneNumberAndEmail: function() {\r",
					"// Define the phone number format\r",
					"const phoneNumberFormat = '703#######';\r",
					"\r",
					"// Function to generate random digits, also defining how many digits to generate\r",
					"function getRandomDigit() {\r",
					"  return Math.floor(Math.random() * 10);\r",
					"}\r",
					"\r",
					"// Function to generate a phone number\r",
					"function generatePhoneNumber(format) {\r",
					"  let phoneNumber = '';\r",
					"  for (let i = 0; i < format.length; i++) {\r",
					"    const char = format[i];\r",
					"    if (char === '#') {\r",
					"      phoneNumber += getRandomDigit();\r",
					"    } else {\r",
					"      phoneNumber += char;\r",
					"    }\r",
					"  }\r",
					"  return phoneNumber;\r",
					"}\r",
					"\r",
					"// Set the random phone number as an environment variable\r",
					"pm.environment.set('randomPhoneNumber', generatePhoneNumber(phoneNumberFormat));\r",
					"\r",
					"var random = Math.random().toString(36).substring(2);\r",
					"var useremail = \"TeamNine\"+random+\"@gmail.com\";\r",
					"\r",
					"pm.environment.set(\"email_env\", useremail);\r",
					"\r",
					"\r",
					"}\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"commontests = {",
					"postPutHeaderTest: function() { ",
					"    //test header presence",
					"    pm. test (\"Content-Type header is present\", () => {",
					"    pm.response.to.have.header (\"Content-Type\");",
					"    });",
					"",
					"    //test header content",
					"    pm.test (\"Content-Type header is application/json\", () => {",
					"    pm.expect (pm.response.headers.get ('Content-Type')) .to.include('application/json');",
					"    });",
					"},",
					"",
					"postPutCommonTests: function() {",
					"    //test response time",
					"        pm.test(\"Response time is less than 3000ms\", ()=> {",
					"        pm.expect (pm.response.responseTime).to.be.below(2999);",
					"        });",
					"    },",
					"",
					"",
					"checkstatuscode: function(){",
					"",
					"    if (pm.response.code === 200) {",
					"    pm.test(\"Verify the expected status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"  ",
					"}else if (pm.response.code === 201) {",
					"    pm.test(\"Verify the expected status code is 201\", function () {",
					"        pm.response.to.have.status(201);",
					"    });",
					"       ",
					"",
					"} else if (pm.response.code === 401) {",
					"    pm.test(\"Validate status code 401\", function () {",
					"        pm.response.to.have.status(401);",
					"    });",
					"    var jsonData = pm.response.json();",
					"    pm.test(\"message: \"+jsonData.message,()=>{",
					"    console.log(\"Message is: \",jsonData.error);",
					"    ",
					"});",
					"} else if (pm.response.code === 400) {",
					"    pm.test(\"Validate status code 400\", function () {",
					"        pm.response.to.have.status(400);",
					"    });",
					"    var jsonData = pm.response.json();",
					"    pm.test(\"message: \"+jsonData.message,()=>{",
					"    console.log(\"Message is: \",jsonData.error);",
					"   ",
					"});",
					"}else if (pm.response.code === 404) {",
					"    pm.test(\"Validate Status code is 404\", function () {",
					"        pm.response.to.have.status(404);",
					"    });",
					"    var jsonData = pm.response.json();",
					"    pm.test(\"message: \"+jsonData.message,()=>{",
					"    console.log(\"Message is: \",jsonData.error);",
					"   ",
					"});",
					"} else {",
					"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
					"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
					"    });",
					"    pm.test(\"error: \"+jsonData.error,()=>{",
					"    console.log(\"Error is: \",jsonData.error);",
					"    ",
					"});",
					"",
					"",
					"}",
					"},",
					"//Patient Module common test functions",
					"",
					"DataValidationPOSTPUTPatient: function() {",
					"    //data validation for post,put request",
					"var responseBody = pm.response.json();",
					"console.log(\"Response Json : \"+JSON.stringify(responseBody));",
					"var patientInfo = pm.environment.get(\"patientInfo\");",
					"",
					"try {",
					"    // Parse the JSON",
					"    var requestBody = JSON.parse(patientInfo);",
					"",
					"    // Use the parsed JSON object (requestBody) as needed",
					"    console.log(requestBody);",
					"} catch (e) {",
					"    console.error(\"Failed to parse patientInfo JSON:\", e);",
					"}",
					"",
					"",
					"//var requestBody= JSON.parse('patientInfo');",
					"console.log(\"Request Json : \"+JSON.stringify(requestBody));",
					"",
					"pm.test(\"DatavalidationtocheckrequestBodyandresponseBody\",()=> {",
					"",
					"pm.expect(responseBody.FirstName).to.equals(requestBody.FirstName);",
					"pm.expect(responseBody.Lastname).to.equals(requestBody.Lastname);",
					"pm.expect(responseBody.ContactNumber).to.equals(requestBody.ContactNumber);",
					"pm.expect(responseBody.Email).to.equals(requestBody.Email);",
					"pm.expect(responseBody.Allergy).to.equals(requestBody.Allergy);",
					"pm.expect(responseBody.FoodPreference).to.equals(requestBody.FoodPreference);",
					"pm.expect(responseBody.CuisineCategory).to.equals(requestBody.CuisineCategory);",
					"pm.expect(responseBody.DateOfBirth).to.equals(requestBody.DateOfBirth);",
					"",
					"});",
					"",
					"},",
					"",
					"    ",
					"    //Schema for Dietician for post,put,get",
					"   SchemaValidationForPatient:function(){",
					"    var schema = {",
					"    ",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"type\": \"object\",",
					"  \"properties\": {",
					"    \"patientId\": {",
					"      \"type\": \"integer\",",
					"      \"description\": \"Autogenerated field\"",
					"    },",
					"    \"FirstName\": {",
					"      \"type\": \"string\",",
					"      \"minLength\": 1",
					"    },",
					"    \"LastName\": {",
					"      \"type\": \"string\",",
					"      \"minLength\": 1",
					"    },",
					"    \"ContactNumber\": {",
					"      \"type\": \"integer\"",
					"    },",
					"    \"Email\": {",
					"      \"type\": \"string\",",
					"      \"format\": \"email\"",
					"    },",
					"    \"Allergy\": {",
					"      \"type\": \"string\",",
					"      \"minLength\": 1",
					"    },",
					"    \"FoodPreference\": {",
					"      \"type\": \"string\"",
					"    },",
					"    \"CuisineCategory\": {",
					"      \"type\": \"string\",",
					"      \"minLength\": 1",
					"    },",
					"    \"FileMorbidity\": {",
					"      \"type\": \"object\",",
					"      \"properties\": {",
					"        \"fileId\": {",
					"          \"type\": \"object\",",
					"          \"properties\": {",
					"            \"T3\": { \"type\": \"number\" },",
					"            \"T4\": { \"type\": \"number\" },",
					"            \"TSH\": { \"type\": \"number\" }",
					"          },",
					"         // \"additionalProperties\": false,",
					"          \"description\": \"Autogenerated field\"",
					"        }",
					"      },",
					"     // \"additionalProperties\": false",
					"    },",
					"    \"FileMorbidityCondition\": {",
					"      \"type\": \"object\",",
					"      \"properties\": {",
					"        \"filedId\": {",
					"          \"type\": \"string\",",
					"          \"pattern\": \"^(Thyroid: Hypothyroidism|Blood Pressure: Hypotension)$\"",
					"        }",
					"      },",
					"     // \"additionalProperties\": false",
					"    },",
					"    \"DateOfBirth\": {",
					"      \"type\": \"string\",",
					"      \"format\": \"date\"",
					"    },",
					"    \"DieticianId\": {",
					"      \"type\": \"integer\"",
					"    },",
					"    \"Vitals\": {",
					"      \"type\": \"object\",",
					"      \"properties\": {",
					"        \"fileId\": {",
					"          \"type\": \"object\",",
					"          \"properties\": {",
					"            \"Weight\": { \"type\": \"number\" },",
					"            \"Height\": { \"type\": \"number\" },",
					"            \"Temperature\": { \"type\": \"number\" },",
					"            \"SP\": { \"type\": \"integer\" },",
					"            \"DP\": { \"type\": \"integer\" }",
					"          },",
					"         // \"additionalProperties\": false,",
					"          \"description\": \"Autogenerated field\"",
					"        }",
					"      },",
					"     // \"additionalProperties\": false",
					"    },",
					"    \"LastVisitdate\": {",
					"      \"type\": \"string\",",
					"      \"format\": \"date\",",
					"      \"description\": \"Autogenerated field\"",
					"    }",
					"  },",
					"  \"required\": [",
					"    \"FirstName\",",
					"    \"LastName\",",
					"    \"ContactNumber\",",
					"    \"Email\",",
					"    \"Allergy\",",
					"    \"CuisineCategory\",",
					"    \"DateOfBirth\"",
					"  ]",
					"  //\"additionalProperties\": false",
					"}",
					"",
					"  ",
					"    var jsonData1 = pm.response.json();",
					"    console.log('jsonDAta1-->' + jsonData1);",
					"    pm.test(\"Validate Schema for Patient Module\",function () {",
					"    var validationOutput = tv4.validate(jsonData1, schema);",
					"    console.log('validationOutput-->' + validationOutput);",
					"    pm.expect(validationOutput).to.be.true;",
					"    });",
					"   ",
					"",
					"   }",
					"",
					"",
					"}",
					"",
					""
				]
			}
		}
	]
}